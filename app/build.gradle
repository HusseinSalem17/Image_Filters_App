plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.hussein.imagefilter"
        minSdk 23
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures{
        viewBinding true
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.6.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    //Scalable size unit
    implementation 'com.intuit.sdp:sdp-android:1.0.6'
    implementation 'com.intuit.ssp:ssp-android:1.0.6'

    //RoundedImageView
    implementation 'com.makeramen:roundedimageview:2.3.0'

    //GPU image (Android filters based on OpenGL. Android developers can use it for image processing)
    implementation 'jp.co.cyberagent.android:gpuimage:2.1.0'

    //Koin -Dependency injection (A pragmatic lightweight dependency injection framework for kotlin developers)
    implementation 'org.koin:koin-androidx-viewmodel:2.0.0'

    //ViewModel (The ViewModel class is designed to store and manage UI-related data in a lifecycle conscious way)
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'

}